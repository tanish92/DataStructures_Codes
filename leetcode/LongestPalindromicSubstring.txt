string longestPalindrome(string s) {
        int n = s.size();
        int start=0,maxlen=1;
        int dp[n][n];
        memset(dp,0,sizeof(dp));
        
        for(int i=0;i<n;i++){
            dp[i][i]=1;
        }
        
        for(int i=0;i<n;i++){
            if(s[i]==s[i+1]){
                dp[i][i+1]=1;
                start=i;
                maxlen=2;
            }
        }
        for(int curr_len=3;curr_len<=n;curr_len++){
            for(int begin=0;begin<n-curr_len+1;begin++){
                int j = begin+curr_len-1;
                if(s[begin]==s[j]&&dp[begin+1][j-1]){
                    dp[begin][j]=1;
                    if(curr_len>maxlen){
                        start=begin;
                        maxlen=curr_len;
                    }
                }
            }
        }
        return s.substr(start,maxlen);
    }